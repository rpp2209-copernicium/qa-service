# Load Balancer Config - Defaults to Round Robin

# =============================================
#           				Structure?
#	 One block each for Questions/Answers/Photos??
# Or just one block for all questions requests?
# =============================================

# PRE REQs
# Make sure that you have the PRIVATE IP addresses for the servers to load balance

# STEPS
# Configure Nginx / Docker locally

# Deploy an Nginx EC2 Instance for Load Balancer 
# (make sure instance allows incoming HTTP traffic on default port 80 => Nginx Instance Security Group)

# SSH into instance & build (copies over conf file, etc.)
# Run Nginx Container (docker run --name nginx  -p 80:80 -dit nginx:latest)

# ⭐ Use `upstream` to define a Pool of servers to load balance 
upstream loadbalancer {
	# ⭐ PATTERN: server <ip>:<port>;

	# If naming containers (api, postgres, etc.) here doesn't work,
	# will need to drop in the PRIVATE EC2 I.P. Addresses instead
	server 172.31.84.116:8080;
	#server api:3001;
	#server api:3002;
	#server api:3004;

  #=================================
        # WEIGHTED EXAMPLE
  #=================================
        # server api:3000 weight=6; # send 60% of inbound traffic to this server
        # server api:3001 weight=4; # send 40% of inbound traffic to this server

  #=================================
        # ANOTHER EXAMPLE
  #=================================
        # Use max_fails and fail_timeout to define ⭐ health checks ⭐
        # server <PRIVATE EC2 I.P>:<PORT> max_fails=3 fail_timeout=30s;
}

# Forward traffic from '/' route to the load balancer
server {
	# server_name qa-load-balancer
	# root /qa/questions; # Define the root route, all locations will be appended like so: /qa/questions/<location>

	# Forward traffic on port 80 to one of the servers in the loadbalancer group server
	listen 80;

	location / {
		proxy_pass    http://loadbalancer;
	}
}

#=================================
# 		  OLD, DISREGARD
#=================================

# =============================================
# OG Config - Just forwards traffic from '/' on default port 80 to localhost:3000

# server {
# 	location / {
# 		proxy_set_header Host $host;
# 		proxy_set_header X-Real-IP $remote_addr;
# 		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 		proxy_set_header X-Forwarded-Proto $scheme;

# 		proxy_pass http://localhost:3000;
# 	}
# }

# =============================================
# CONFIG NGINX-DOCKER

# https://dev.to/tirthaguha/routing-requests-to-containers-with-nginx-49pn
# upstream fec-graviton-legacy {
#     server http://localhost:3000 weight=1;
# }

# upstream qa-service {
#     server http://localhost:8080 weight=1;
# }

# server {

#   location / {
#     proxy_set_header X-Forwarded-Host $host:$server_port;
#     proxy_set_header X-Forwarded-Server $host;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_pass http://localhost:8000/qa;
#   }

#   location /questions {
#     proxy_set_header X-Forwarded-Host $host:$server_port;
#     proxy_set_header X-Forwarded-Server $host;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_pass http://questions;
#   }

# }