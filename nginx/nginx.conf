log_format upstreamlog '\n$server_name to: $upstream_addr[$request]\n'
  '\n upstream_response_time $upstream_response_time\n'
  '\n msec $msec request_time $request_time\n';

# Load Balancer Config - Defaults to Round Robin

# PRE REQs
# Make sure that you have the PRIVATE IP addresses for the servers to load balance

# STEPS
# Configure Nginx / Docker locally

# Deploy an Nginx EC2 Instance for Load Balancer 
# (make sure instance allows incoming HTTP traffic on default port 80 => Nginx Instance Security Group)

# SSH into instance & build (copies over conf file, etc.)
# Run Nginx Container (via docker run command)

# ⭐ Use `upstream` to define a Pool of servers to load balance 
# ⭐ PATTERN: server <ip>:<port> <options>; 
upstream loadbalancer {
	# Only 8080 server works currently - error when attempting to route to 8081 & 8082 (Debug Todo)
	# Public API I.P. Address (port 8080)
	server 44.202.121.159:8080;
	server 44.202.121.159:8081;
	#server 44.202.121.159:8082;

	#server 54.147.43.16:8080;
	#server 54.147.43.16:8081;
	#server 54.147.43.16:8082;
}

# Forward traffic from '/' route to the load balancer
server {
	# root /qa/questions; # Define the root route, all locations will be appended like so: /qa/questions/<location>
	
	# Forward traffic on port 80 to one of the servers in the loadbalancer group server
	listen 80; 
	
	server_name api;

	access_log /var/log/nginx/access.log upstreamlog;
	error_log /var/log/nginx/error_log info;
	
	location / {
	  proxy_pass http://loadbalancer;
	}
}


#=================================
# 		  OLD, DISREGARD
#=================================

# =============================================
# OG Config - Just forwards traffic from '/' on default port 80 to localhost:3000

# server {
# 	location / {
# 		proxy_set_header Host $host;
# 		proxy_set_header X-Real-IP $remote_addr;
# 		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
# 		proxy_set_header X-Forwarded-Proto $scheme;

# 		proxy_pass http://localhost:3000;
# 	}
# }

# =============================================
# CONFIG NGINX-DOCKER

# https://dev.to/tirthaguha/routing-requests-to-containers-with-nginx-49pn
# upstream fec-graviton-legacy {
#     server http://localhost:3000 weight=1;
# }

# upstream qa-service {
#     server http://localhost:8080 weight=1;
# }

# server {

#   location / {
#     proxy_set_header X-Forwarded-Host $host:$server_port;
#     proxy_set_header X-Forwarded-Server $host;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_pass http://localhost:8000/qa;
#   }

#   location /questions {
#     proxy_set_header X-Forwarded-Host $host:$server_port;
#     proxy_set_header X-Forwarded-Server $host;
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_pass http://questions;
#   }

# }
